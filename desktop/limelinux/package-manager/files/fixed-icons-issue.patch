diff -Nuar package-manager1/src/basketdialog.py package-manager2/src/basketdialog.py
--- package-manager1/src/basketdialog.py	2018-01-05 16:39:51.822057000 +0300
+++ src/basketdialog.py	2018-01-13 13:56:07.000000000 +0300
@@ -12,6 +12,7 @@
 
 from PyQt5 import QtGui, QtWidgets
 from PyQt5.QtCore import *
+from PyQt5.QtGui import *
 
 from packagemodel import GroupRole
 from packageproxy import PackageProxy
@@ -48,10 +49,10 @@
 
         self.actionButton.clicked.connect(self.action)
         self.cancelButton.clicked.connect(self._hide)
-        self.cancelButton.setIcon(KIcon("dialog-close"))
+        self.cancelButton.setIcon(QIcon.fromTheme("window-close"))
 
         self.clearButton.clicked.connect(self.clearSelections)
-        self.clearButton.setIcon(KIcon("trashcan_empty"))
+        self.clearButton.setIcon(QIcon.fromTheme("list-remove"))
 
     def clearSelections(self):
         sure = QtWidgets.QMessageBox.question(self, _translate("Packaga Manager","Clear Basket"),
diff -Nuar package-manager1/src/grouplist.py package-manager2/src/grouplist.py
--- package-manager1/src/grouplist.py	2018-01-05 16:39:51.822057000 +0300
+++ src/grouplist.py	2018-01-16 16:09:22.000000000 +0300
@@ -19,9 +19,10 @@
 from PyQt5.QtCore import QVariant
 from PyQt5.QtCore import QCoreApplication
 
-from PyQt5.QtGui import QIcon
+from PyQt5.QtGui import *
 from PyQt5.QtWidgets import QListWidget
 from PyQt5.QtWidgets import QListWidgetItem
+from pds import qiconloader
 
 from pmutils import *
 from statemanager import StateManager
@@ -34,7 +35,8 @@
         super(GroupList, self).__init__(parent)
         #QListWidget.__init__(self, parent)
         self.iface = backend.pm.Iface()
-        self.defaultIcon = KIcon(('applications-other', 'unknown'), KIconLoader.SizeSmallMedium)
+        #self.defaultIcon = KIcon(('applications-other', 'unknown'), KIconLoader.SizeSmallMedium)
+        self.defaultIcon= QIcon('/usr/share/package-manager/data/application-x-pisi.svg')
         self.itemClicked[QListWidgetItem].connect(self.slotGroupChanged)
         self.itemSelectionChanged.connect(self.slotGroupChanged)
         self._list = {}
@@ -65,13 +67,14 @@
             package_count = content[2]
 
         icon = KIcon(icon_path, KIconLoader.SizeSmallMedium)
+        #icon = QIcon(QPixmap(icon_path).scaled(32,32))
         if icon.isNull():
             icon = self.defaultIcon
         text = "%s (%d)" % (localName, package_count)
         item = QListWidgetItem(icon, text, self)
         item.setToolTip(localName)
         item.setData(Qt.UserRole, QVariant(unicode(name)))
-        item.setSizeHint(QSize(0, KIconLoader.SizeMedium))
+        item.setSizeHint(QSize(0, QIconLoader.SizeMedium))
         self._list[name] = item
 
     def moveAllToFirstLine(self):
diff -Nuar package-manager1/src/mainwidget.py package-manager2/src/mainwidget.py
--- package-manager1/src/mainwidget.py	2018-01-05 16:39:51.822057000 +0300
+++ src/mainwidget.py	2018-01-13 13:56:07.000000000 +0300
@@ -19,7 +19,7 @@
 from PyQt5.QtWidgets import QMessageBox
 from PyQt5.QtWidgets import QPushButton
 from PyQt5.QtWidgets import QToolButton
-from PyQt5.QtGui import QFontMetrics
+from PyQt5.QtGui import *
 
 from PyQt5.QtCore import Qt
 from PyQt5.QtCore import QSize
@@ -84,7 +84,7 @@
         self.statusUpdater = StatusUpdater()
         self.basket = BasketDialog(self.state, self.parent)
         self._postexceptions.append(lambda: self.basket.setActionEnabled(True))
-        self.searchButton.setIcon(KIcon(("edit-find", "find")))
+        self.searchButton.setIcon(QIcon.fromTheme('edit-find'))
         self.initializeUpdateTypeList()
 
         model = PackageModel(self)
@@ -446,10 +446,14 @@
 
     def initializeUpdateTypeList(self):
         self.typeCombo.clear()
-        UPDATE_TYPES = [['normal', _translate("Packaga Manager",'All Updates'), ('system-software-update', 'ledgreen')],
-                        ['security', _translate("Packaga Manager",'Security Updates'), ('security-medium', 'ledyellow')],
-                        ['critical', _translate("Packaga Manager",'Critical Updates'), ('security-low', 'ledred')]]
+        self.typeCombo.addItem(QIcon.fromTheme('system-software-update'), _translate("Packaga Manager",'All Updates'), 'normal')
+        self.typeCombo.addItem(QIcon.fromTheme('security-medium'), _translate("Packaga Manager",'Security Updates'), 'security')
+        self.typeCombo.addItem(QIcon.fromTheme('security-low'), _translate("Packaga Manager",'Critical Updates'), 'critical')
+        
+        #UPDATE_TYPES = [['normal', _translate("Packaga Manager",'All Updates'), ('system-software-update', 'ledgreen')],
+                        #['security', _translate("Packaga Manager",'Security Updates'), ('security-medium', 'ledyellow')],
+                        #['critical', _translate("Packaga Manager",'Critical Updates'), ('security-low', 'ledred')]]
 
-        for type in UPDATE_TYPES:
-            self.typeCombo.addItem(KIcon(type[2]), type[1], QVariant(type[0]))
+        #for type in UPDATE_TYPES:
+            #self.typeCombo.addItem(KIcon(type[2]), type[1], QVariant(type[0]))
 
diff -Nuar package-manager1/src/mainwindow.py package-manager2/src/mainwindow.py
--- package-manager1/src/mainwindow.py	2018-01-05 16:39:51.823057000 +0300
+++ src/mainwindow.py	2018-01-16 22:15:10.000000000 +0300
@@ -57,7 +57,7 @@
         self.busy = QProgressIndicator(self)
         self.busy.setFixedSize(QSize(20, 20))
 
-        self.setWindowIcon(QIcon(":/data/package-manager.svg"))
+        self.setWindowIcon(QIcon("/usr/share/package-manager/data/tray-zero.svg"))
 
         self.setCentralWidget(MainWidget(self))
         self.cw = self.centralWidget()
@@ -110,7 +110,7 @@
         self.cw.switchState(StateManager.UPGRADE)
 
         KApplication.kApplication().updateUserTimestamp()
-
+       
         self.show()
         self.raise_()
 
@@ -137,35 +137,35 @@
 
     def initializeOperationActions(self):
 
-        self.showAllAction = QAction(KIcon(("applications-other", "package_applications")), _translate("Packaga Manager","All Packages"), self)
+        self.showAllAction = QAction(QIcon.fromTheme("media-optical"), _translate("Packaga Manager","All Packages"), self)
         self.showAllAction.triggered.connect(lambda:self.cw.switchState(StateManager.ALL))
-        self.cw.stateTab.addTab(QWidget(), KIcon(("applications-other", "package_applications")), _translate("Packaga Manager","All Packages"))
+        self.cw.stateTab.addTab(QWidget(), QIcon.fromTheme("media-optical"), _translate("Packaga Manager","All Packages"))
 
-        self.showInstallAction = QAction(KIcon(("list-add", "add")), _translate("Packaga Manager","Installable Packages"), self)
+        self.showInstallAction = QAction(QIcon.fromTheme("list-remove"), _translate("Packaga Manager","Installable Packages"), self)
         self.showInstallAction.triggered.connect(lambda:self.cw.switchState(StateManager.INSTALL))
-        self.cw.stateTab.addTab(QWidget(), KIcon(("list-add", "add")), _translate("Packaga Manager","Installable Packages"))
+        self.cw.stateTab.addTab(QWidget(), QIcon.fromTheme("list-add"), _translate("Packaga Manager","Installable Packages"))
 
-        self.showRemoveAction = QAction(KIcon(("list-remove", "remove")), _translate("Packaga Manager","Installed Packages"), self)
+        self.showRemoveAction = QAction(QIcon.fromTheme("list-add"), _translate("Packaga Manager","Installed Packages"), self)
         self.showRemoveAction.triggered.connect(lambda:self.cw.switchState(StateManager.REMOVE))
-        self.cw.stateTab.addTab(QWidget(), KIcon(("list-remove", "remove")), _translate("Packaga Manager","Installed Packages"))
+        self.cw.stateTab.addTab(QWidget(), QIcon.fromTheme("list-remove"), _translate("Packaga Manager","Installed Packages"))
 
-        self.showUpgradeAction = QAction(KIcon(("system-software-update", "gear")), _translate("Packaga Manager","Updates"), self)
+        self.showUpgradeAction = QAction(QIcon.fromTheme("system-software-update"), _translate("Packaga Manager","Updates"), self)
         self.showUpgradeAction.triggered.connect(lambda:self.cw.switchState(StateManager.UPGRADE))
-        self.cw.stateTab.addTab(QWidget(), KIcon(("system-software-update", "gear")), _translate("Packaga Manager","Updates"))
+        self.cw.stateTab.addTab(QWidget(), QIcon("/usr/share/package-manager/data/star_1.svg"), _translate("Packaga Manager","Updates"))
 
-        self.showPreferences = QAction(KIcon(("preferences-system", "package_settings")), _translate("Packaga Manager","Settings"), self)
+        self.showPreferences = QAction(QIcon.fromTheme("preferences-system"), _translate("Packaga Manager","Settings"), self)
         self.showPreferences.triggered.connect(self.settingsDialog.show_)
 
-        self.actionHelp = QAction(KIcon("help"), _translate("Packaga Manager","Help"), self)
+        self.actionHelp = QAction(QIcon.fromTheme("help-about"), _translate("Packaga Manager","Help"), self)
         self.actionHelp.setShortcuts(QKeySequence.HelpContents)
         self.actionHelp.triggered.connect(self.showHelp)
 
-        self.actionQuit = QAction(KIcon("exit"), _translate("Packaga Manager","Quit"), self)
+        self.actionQuit = QAction(QIcon.fromTheme("media-eject"), _translate("Packaga Manager","Quit"), self)
         self.actionQuit.setShortcuts(QKeySequence.Quit)
         self.actionQuit.triggered.connect(qApp.exit)
 
         self.cw.menuButton.setMenu(QMenu('MainMenu', self.cw.menuButton))
-        self.cw.menuButton.setIcon(KIcon(("preferences-system", "package_settings")))
+        self.cw.menuButton.setIcon(QIcon.fromTheme("preferences-system"))
         self.cw.menuButton.menu().clear()
 
         self.cw.contentHistory.hide()
@@ -182,7 +182,7 @@
 
         self.showAllAction.setChecked(True)
         self.cw.checkUpdatesButton.hide()
-        self.cw.checkUpdatesButton.setIcon(KIcon(("view-refresh", "reload")))
+        self.cw.checkUpdatesButton.setIcon(QIcon.fromTheme("system-reboot"))
         self.cw.showBasketButton.clicked.connect(self.cw.showBasket)
 
         # Little time left for the new ui
diff -Nuar package-manager1/src/packagedelegate.py package-manager2/src/packagedelegate.py
--- package-manager1/src/packagedelegate.py	2018-01-05 16:39:51.823057000 +0300
+++ src/packagedelegate.py	2018-01-16 21:47:01.000000000 +0300
@@ -35,12 +35,15 @@
 from PyQt5.QtCore import QPoint
 from PyQt5.QtCore import QVariant
 from PyQt5.QtCore import pyqtSignal, QCoreApplication
+from PyQt5.QtGui import *
+from PyQt5.QtWidgets import *
 
 from pmutils import *
 from packagemodel import *
 from webdialog import WebDialog
 from rowanimator import RowAnimator
 
+
 import config
 
 _translate = QCoreApplication.translate
@@ -72,8 +75,10 @@
         self.show_details_button = showDetailsButton
 
         self.rowAnimator = RowAnimator(parent.packageList)
-        self.defaultIcon = KIcon(('package-x-generic', 'package_applications'), 32)
-        self.defaultInstalledIcon = QIcon(KIconLoader.loadOverlayed(('package-x-generic', 'package_applications'), CHECK_ICON, 32))
+        self.defaultIcon = QIcon(QPixmap('/usr/share/package-manager/data/tray-zero.svg').scaled(32, 32))
+        #self.defaultIcon = KIcon(('package-x-generic', 'package_applications'), 32)
+        self.defaultInstalledIcon = QIcon(QPixmap('/usr/share/package-manager/data/installed.svg').scaled(32, 32))
+        #self.defaultInstalledIcon = KIcon(KIconLoader.loadOverlayed(('package-x-generic', 'package_applications'), CHECK_ICON, 32))
         self.animatable = animatable
         self._max_height = ROW_HEIGHT
 
@@ -181,8 +186,8 @@
             overlay = [CHECK_ICON] if installed else []
             KIconLoader._forceCache = True
             pix = KIconLoader.loadOverlayed(_icon, overlay, 32)
-            if not pix.isNull():
-                icon = QIcon(pix.scaled(QSize(32, 32), Qt.KeepAspectRatio, Qt.SmoothTransformation))
+            #if not pix.isNull():
+                #icon = QIcon(pix.scaled(QSize(32, 32), Qt.KeepAspectRatio, Qt.SmoothTransformation))
             KIconLoader._forceCache = False
                
 
diff -Nuar package-manager1/src/pdswidgets.py package-manager2/src/pdswidgets.py
--- package-manager1/src/pdswidgets.py	2018-01-05 16:39:51.823057000 +0300
+++ src/pdswidgets.py	2018-01-13 13:56:07.000000000 +0300
@@ -12,6 +12,7 @@
 #
 
 from PyQt5 import QtCore, QtGui, QtWidgets
+from PyQt5.QtGui import QIcon
 from pds.gui import *
 from pds.qprogressindicator import QProgressIndicator
 from ui_message import Ui_MessageBox
@@ -52,7 +53,7 @@
         else:
             if icon:
                 if type(icon) == str:
-                    icon = KIcon(icon).pixmap(32,32)
+                    icon = QIcon(icon).pixmap(32,32)
                 self.ui.icon.setPixmap(QtGui.QPixmap(icon))
                 self.ui.icon.show()
             else:
diff -Nuar package-manager1/src/pm-install.py package-manager2/src/pm-install.py
--- package-manager1/src/pm-install.py	2018-01-05 16:39:51.823057000 +0300
+++ src/pm-install.py	2018-01-16 22:57:23.000000000 +0300
@@ -20,7 +20,7 @@
 
 # PyQt5 Imports
 from PyQt5.QtCore import *
-from PyQt5.QtGui import QFont
+from PyQt5.QtGui import *
 from PyQt5.QtWidgets import QApplication
 
 from pds.quniqueapp import QUniqueApplication
diff -Nuar package-manager1/src/pmutils.py package-manager2/src/pmutils.py
--- package-manager1/src/pmutils.py	2018-01-05 16:39:51.823057000 +0300
+++ src/pmutils.py	2018-01-16 16:10:41.000000000 +0300
@@ -40,9 +40,9 @@
 from pds.qiconloader import QIconLoader
 
 Pds = pds.Pds('package-manager', debug = False)
-# Force to use Default Session for testing
-# Pds.session = pds.DefaultDe
-# print 'Current session is : %s %s' % (Pds.session.Name, Pds.session.Version)
+#Force to use Default Session for testing
+Pds.session = pds.DefaultDe
+print 'Current session is : %s %s' % (Pds.session.Name, Pds.session.Version)
 
 i18n = Pds.session.i18n
 KIconLoader = QIconLoader(Pds)
diff -Nuar package-manager1/src/pmwindow.py package-manager2/src/pmwindow.py
--- package-manager1/src/pmwindow.py	2018-01-05 16:39:51.823057000 +0300
+++ src/pmwindow.py	2018-01-14 06:28:00.000000000 +0300
@@ -16,7 +16,7 @@
 import pisi
 
 from PyQt5.QtWidgets import QDialog
-from PyQt5.QtGui import QPixmap
+from PyQt5.QtGui import *
 from PyQt5.QtWidgets import QMessageBox
 from PyQt5.QtCore import *
 
@@ -115,10 +115,10 @@
         self.connectOperationSignals()
 
         self.button_install.clicked.connect(self.installPackages)
-        self.button_install.setIcon(KIcon(("list-add", "add")))
+        self.button_install.setIcon(QIcon.fromTheme("list-add"))
 
         self.button_cancel.clicked.connect(self.actionCancelled)
-        self.button_cancel.setIcon(KIcon("cancel"))
+        self.button_cancel.setIcon(QIcon.fromTheme("list-remove"))
 
         self.rejected.connect(self.actionCancelled)
 
diff -Nuar package-manager1/src/progressdialog.py package-manager2/src/progressdialog.py
--- package-manager1/src/progressdialog.py	2018-01-05 16:39:51.823057000 +0300
+++ src/progressdialog.py	2018-01-13 13:56:07.000000000 +0300
@@ -14,6 +14,7 @@
 from PyQt5.QtCore import pyqtSignal
 from PyQt5.QtCore import QTimer
 from PyQt5.QtCore import QSize, QCoreApplication
+from PyQt5.QtGui import *
 
 from pmutils import *
 from pds.gui import *
@@ -47,7 +48,7 @@
         self.registerFunction(OUT, self.busy.stopAnimation)
 
         self.cancelButton.clicked.connect(self.cancel)
-        self.cancelButton.setIcon(KIcon("cancel"))
+        self.cancelButton.setIcon(QIcon.fromTheme("cancel"))
         self.parent = parent
         self.widget.setStyleSheet("QTextEdit { \
             background:rgba(0,0,0,0); \
diff -Nuar package-manager1/src/settingsdialog.py package-manager2/src/settingsdialog.py
--- package-manager1/src/settingsdialog.py	2018-01-05 16:39:51.823057000 +0300
+++ src/settingsdialog.py	2018-01-13 13:56:07.000000000 +0300
@@ -18,7 +18,7 @@
 from PyQt5.QtWidgets import QTableWidgetItem
 from PyQt5.QtWidgets import QCheckBox
 from PyQt5.QtWidgets import QFileDialog
-from PyQt5.QtGui import QDesktopServices
+from PyQt5.QtGui import *
 from PyQt5.QtNetwork import QNetworkProxy
 from PyQt5.QtCore import *
 
@@ -66,10 +66,13 @@
     traySettingChanged = pyqtSignal()
     
     def setupUi(self):
-        self.settings.moveUpButton.setIcon(KIcon("up"))
-        self.settings.moveDownButton.setIcon(KIcon("down"))
-        self.settings.addRepoButton.setIcon(KIcon(("list-add", "add")))
-        self.settings.removeRepoButton.setIcon(KIcon(("list-remove", "remove")))
+        self.settings.moveUpButton.setIcon(QIcon.fromTheme("go-up"))
+        self.settings.moveDownButton.setIcon(QIcon.fromTheme("go-down"))
+        self.settings.addRepoButton.setIcon(QIcon.fromTheme("list-add"))
+        self.settings.removeRepoButton.setIcon(QIcon.fromTheme("list-remove"))
+        self.settings.buttonHelp.setIcon(QIcon.fromTheme("help"))
+        self.settings.buttonCancel.setIcon(QIcon.fromTheme("go-down"))
+        self.settings.buttonOk.setIcon(QIcon.fromTheme("go-next"))
         self.initialize()
         
 
diff -Nuar package-manager1/src/statemanager.py package-manager2/src/statemanager.py
--- package-manager1/src/statemanager.py	2018-01-05 16:39:51.823057000 +0300
+++ src/statemanager.py	2018-01-13 13:56:07.000000000 +0300
@@ -13,6 +13,7 @@
 
 from PyQt5.QtCore import QObject, pyqtSignal, QCoreApplication
 from PyQt5.QtWidgets import QMessageBox
+from PyQt5.QtGui import *
 
 
 import config
@@ -118,10 +119,10 @@
 
     def getActionIcon(self, state = None):
         state = self.state if state == None else state
-        return {self.INSTALL:KIcon(("list-add", "add")),
-                self.REMOVE :KIcon(("list-remove", "remove")),
-                self.UPGRADE:KIcon(("system-software-update", "gear")),
-                self.ALL    :KIcon("preferences-other")}[state]
+        return {self.INSTALL:QIcon.fromTheme("list-add"),
+                self.REMOVE :QIcon.fromTheme("list-remove"),
+                self.UPGRADE:QIcon.fromTheme("system-software-update"),
+                self.ALL    :QIcon.fromTheme("preferences-other")}[state]
 
     def getSummaryInfo(self, total):
         return {self.INSTALL:_translate("Packaga Manager","{0} new package(s) have been installed succesfully.").format(total),
diff -Nuar package-manager1/src/summarydialog.py package-manager2/src/summarydialog.py
--- package-manager1/src/summarydialog.py	2018-01-05 16:39:51.823057000 +0300
+++ src/summarydialog.py	2018-01-16 16:35:39.000000000 +0300
@@ -45,10 +45,10 @@
         self.appName.setText(self.item.name)
 
         icon = str(self.item.icon).split('.')[:-1]
-        icon = KIconLoader.load(icon)
+        icon = QIconLoader.load(icon)
 
         if icon.isNull():
-            icon = KIconLoader.load('package')
+            icon = QIconLoader.load('/usr/share/package-manager/data/aplication-x-pisi.svg')
 
         self.appIcon.setPixmap(
                                icon.scaled(QSize(32, 32),
@@ -82,7 +82,7 @@
 
     def checkIcon(self, iconFileName):
         extensions = ['png', 'jpg','jpeg', 'svg']
-        pixmapsDir = '/usr/share/pixmaps/'
+        pixmapsDir = ['/usr/share/pixmaps/', '/usr/share/icons']
         if os.path.isfile(iconFileName) == True:
             return iconFileName
         else:
diff -Nuar package-manager1/src/webdialog.py package-manager2/src/webdialog.py
--- package-manager1/src/webdialog.py	2018-01-05 16:39:51.824057000 +0300
+++ src/webdialog.py	2018-01-13 13:56:07.000000000 +0300
@@ -13,6 +13,7 @@
 from PyQt5 import QtWidgets
 from PyQt5 import QtWebKit, QtWebKitWidgets
 from PyQt5.QtCore import *
+from PyQt5.QtGui import *
 
 import config, backend
 
@@ -47,7 +48,7 @@
         self.registerFunction(FINISHED, lambda: parent.statusBar().setVisible(not self.isVisible()))
         self._as = 'http://appinfo.pisilinux.org'
         self.cancelButton.clicked.connect(self._hide)
-        self.cancelButton.setIcon(KIcon("cancel"))
+        self.cancelButton.setIcon(QIcon.fromTheme("cancel"))
 
         # Hide Scrollbars and context menu in webview
         self.webView.setContextMenuPolicy(Qt.NoContextMenu)
@@ -173,7 +174,7 @@
         # self._disable_parent_in_shown = True
 
         self.cancelButton.clicked.connect(self._hide)
-        self.cancelButton.setIcon(KIcon("window-close"))
+        self.cancelButton.setIcon(QIcon.fromTheme("window-close"))
 
         # Hide Scrollbars and context menu in webview
         self.webView.setContextMenuPolicy(Qt.NoContextMenu)
