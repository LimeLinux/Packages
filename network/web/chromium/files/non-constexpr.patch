diff --git chromium-64.0.3282.186/third_party/angle/src/compiler/translator/StaticType.h chromium-64.0.3282.186/third_party/angle/src/compiler/translator/StaticType.h
index e26e5ff..30b391a 100644
--- chromium-64.0.3282.186/third_party/angle/src/compiler/translator/StaticType.h
+++ chromium-64.0.3282.186/third_party/angle/src/compiler/translator/StaticType.h
@@ -160,7 +160,7 @@
           TPrecision precision,
           TQualifier qualifier,
           unsigned char secondarySize>
-const TType *GetForVecMatHelper(unsigned char primarySize)
+constexpr const TType *GetForVecMatHelper(unsigned char primarySize)
 {
     static_assert(basicType == EbtFloat || basicType == EbtInt || basicType == EbtUInt ||
                       basicType == EbtBool,
@@ -186,7 +186,7 @@
 template <TBasicType basicType,
           TPrecision precision = EbpUndefined,
           TQualifier qualifier = EvqGlobal>
-const TType *GetForVecMat(unsigned char primarySize, unsigned char secondarySize = 1)
+constexpr const TType *GetForVecMat(unsigned char primarySize, unsigned char secondarySize = 1)
 {
     static_assert(basicType == EbtFloat || basicType == EbtInt || basicType == EbtUInt ||
                       basicType == EbtBool,
@@ -208,7 +208,7 @@
 }
 
 template <TBasicType basicType, TPrecision precision = EbpUndefined>
-const TType *GetForVec(TQualifier qualifier, unsigned char size)
+constexpr const TType *GetForVec(TQualifier qualifier, unsigned char size)
 {
     switch (qualifier)
     {
diff --git chromium-64.0.3282.186/third_party/angle/src/compiler/translator/SymbolTable.cpp chromium-64.0.3282.186/third_party/angle/src/compiler/translator/SymbolTable.cpp
index adf1e4e..90d4c15 100644
--- chromium-64.0.3282.186/third_party/angle/src/compiler/translator/SymbolTable.cpp
+++ chromium-64.0.3282.186/third_party/angle/src/compiler/translator/SymbolTable.cpp
@@ -236,7 +236,7 @@
         pop();
 }
 
-bool IsGenType(const TType *type)
+constexpr bool IsGenType(const TType *type)
 {
     if (type)
     {
@@ -248,7 +248,7 @@
     return false;
 }
 
-bool IsVecType(const TType *type)
+constexpr bool IsVecType(const TType *type)
 {
     if (type)
     {
diff --git chromium-64.0.3282.186/third_party/angle/src/compiler/translator/Types.h chromium-64.0.3282.186/third_party/angle/src/compiler/translator/Types.h
index 04f46f1..a54d447 100644
--- chromium-64.0.3282.186/third_party/angle/src/compiler/translator/Types.h
+++ chromium-64.0.3282.186/third_party/angle/src/compiler/translator/Types.h
@@ -142,13 +142,13 @@
     {
     }
 
-    TBasicType getBasicType() const { return type; }
+    constexpr TBasicType getBasicType() const { return type; }
     void setBasicType(TBasicType t);
 
     TPrecision getPrecision() const { return precision; }
     void setPrecision(TPrecision p) { precision = p; }
 
-    TQualifier getQualifier() const { return qualifier; }
+    constexpr TQualifier getQualifier() const { return qualifier; }
     void setQualifier(TQualifier q) { qualifier = q; }
 
     bool isInvariant() const { return invariant; }
